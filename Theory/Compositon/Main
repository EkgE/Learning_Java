public class Main {
    //using extends keyword clss can inheritance only by one class
    //using composition class can use more than one subclass
    public static void main(String[] args) {
            Engine Alt2_0 = new Engine(2009, 4, "oil");
            Tires tires = new Tires("Winter type", "3mm");
            Wheels wheels = new Wheels(4, 20, "Chronic", tires );
            Body redSedan = new Body("Sedan", "Red");

            Car randomCar = new Car("Ford", Alt2_0, redSedan, wheels); // now randomClass instance of Car class, have nested classes
                // those classes were already initialized
                // we can access to those classes fields and methods

            randomCar.getEngine().soundOfEngine(); //Wroom
            //system read it as: randomCar object called getEngine, which called Alt2_0, which called Alt2_0.soundOfEngine() that ended printing "Wroom Wroom"
            randomCar.getWheels().getTires().changeTires(); //Change tires on summer
            // random car called getWheels(), which returned instance wheels of class Wheels
                //than wheels called getTires(), which returned instance tires of class Tires
                    //than tires called state changeTires() which returned "Change tires on summer"

//            randomCar.getWheels().getTires().producerOfTires() //error
        //state producerOfTires() is private, we can't access them by calling chain of classes
        // we can access private states only localy, however we can call them by method which state is public
        randomCar.getWheels().getTires().areTiresOriginal(); //yes
        //Producer of tires is continental

        System.out.println(randomCar.getBody()); //Body@2133c8f8
        //this is a hashcode of object, sth like a adress in memory
        //it can be checked by XXX.hashCode()

    }

}
