public class Main {
    public static void main(String[] args) {
        Example firstExample = new Example();
        Example secondExample = new Example();

        //writing object with dot like firstExample. is giving a lot of methods or variables, that are added automatically
        //they're inherited from java base class

//        firstExample.numberField; // error, numberField is private, so we can call it
        firstExample.publicInt = 25; // not an error, because publicInt have public access modified
        //but we shouldn't call fields as public and initialize them in main, because it's breaking encapsulation rule
        // if we want to initialize variable or change it, we should use specific method for it

        firstExample.setNumberField(30); // with method called setNumberField we initialize private field numberField to 30
        //calling now object firstExample.numberField will give us 30;

//        System.out.println(firstExample.numberField); // doesn't work, because despite it's initialized we can't call it so easly
        System.out.println("numberField is " + firstExample.getNumberField()); //numberField is 30
        // by using get we can return wanted field

        System.out.println(firstExample.getStringField()); //null
        //stringField was ot initialized by set so default value of it is null
    }
}
